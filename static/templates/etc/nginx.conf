worker_processes auto;
daemon off;  # see warnings: http://wiki.nginx.org/CoreModule#daemon
user %s;
error_log %s;
pid %s;
events {
    worker_connections 1024;
    use epoll;
}
http {
    charset utf-8;
    client_max_body_size 0;  # disabled
    client_body_temp_path  %s 1 2;
    client_header_buffer_size 256k;
    large_client_header_buffers 8 1024k;

    proxy_temp_path   %s  1 2;
    proxy_cache_path  %s  levels=1:2     keys_zone=proxy_one:10m;

    fastcgi_temp_path   %s  1 2;
    fastcgi_cache_path  %s  levels=1:2   keys_zone=fastcgi_one:10m;

    uwsgi_temp_path   %s  1 2;
    uwsgi_cache_path  %s  levels=1:2     keys_zone=uwsgi_one:10m;

    scgi_temp_path   %s  1 2;
    scgi_cache_path  %s  levels=1:2     keys_zone=scgi_one:10m;

    # Enumerate all the Tornado servers here
    upstream frontends {
        server 127.0.0.1:5421;
        server 127.0.0.1:5422;
        server 127.0.0.1:5423;
        server 127.0.0.1:5424;
        #server %s:5421;
        #server %s:5422;
        #server %s:5423;
        #server %s:5424;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    error_log %s;
    access_log %s;

    # Timeouts
    keepalive_timeout 3m;
    client_header_timeout  3m;
    client_body_timeout  3m;
    proxy_connect_timeout 3m;
    proxy_send_timeout 3m;
    proxy_read_timeout 3m;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
            application/x-javascript application/xml
            application/atom+xml text/javascript
            application/json;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    server {
        listen 127.0.0.1:5420;
        #listen %s:5420;
        ssl                 off;
        ssl_certificate     %s;
        ssl_certificate_key %s;

        ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers          RC4:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  60m;

        location ^~ /static/ {
            root %s;
            if ($query_string) {
                expires max;
            }
        }

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;

            proxy_set_header        Accept-Encoding   "";
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

            ### Most PHP, Python, Rails, Java App can use this header ###
            #proxy_set_header X-Forwarded-Proto https;##
            #This is better##
            proxy_set_header        X-Forwarded-Proto $scheme;
            add_header              Front-End-Https   on;

            ### force timeouts if one of backend is died ##
            proxy_next_upstream error timeout invalid_header http_500 http_502
                                                             http_504;
            # NOTE: consider adding 503, if not raising 503 for locks
        }
    }
}
